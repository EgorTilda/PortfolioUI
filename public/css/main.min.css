*{padding:0;margin:0;border:0}*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}a,a:link,a:visited{text-decoration:none}a:visited{color:#21243d}a:hover{text-decoration:none}aside,footer,header,legend,main,nav,section{display:block}h1,h2,h3,h4,h5,h6,p{font-size:inherit;font-weight:inherit}ul,ul li{list-style:none}img{vertical-align:top}img,svg{max-width:100%;height:auto}address{font-style:normal}input,select,textarea{background-color:transparent}button,input,select,textarea{font-family:inherit;font-size:inherit;color:inherit}input::-ms-clear{display:none}button,input[type=submit]{display:inline-block;-webkit-box-shadow:none;box-shadow:none;background-color:transparent;background:0 0;cursor:pointer}button:active,button:focus,input:active,input:focus{outline:0}button::-moz-focus-inner{padding:0;border:0}label{cursor:pointer}:root{--primary:#FF6464;--primary-light:#fd7878;--secondary:#00A8CC;--dark:#21243D;--light:#8695A4;--text:#21243D;--surface:#FFF;--surface-secondary:#EDF7FA;--white:#fff;--black:#000;--font-main:"Heebo", sans-serif;--container-width-m:855px;--container-width-l:1032px;--container-padding-x:15px}.header-nav,.header__inner{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__inner{padding:1.688rem 0;justify-content:end}.header-nav{justify-content:flex-end}.header-nav__link{display:inline-block;font-size:1.25rem;font-weight:500;-webkit-transition:.2s;transition:.2s}.header-nav__link:visited{color:var(--dark)!important}.header-nav__link::first-letter{text-transform:uppercase}.header-nav__link:not(:last-child){margin-right:2rem}.header-nav__link:hover{color:var(--primary)!important}.btn{display:inline-block;text-align:center;font-size:1.25rem;font-weight:500;padding:.625rem 1.25rem;background-color:var(--primary);border-radius:2px}.btn,.btn:visited{color:var(--white)}.btn:hover{background-color:var(--primary-light)}.btn-menu{display:none}.title{font-size:1.375rem}.title__wrap{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.title__link,.title__link:visited{color:var(--secondary)}.post-card{padding:2rem 1.25rem;background-color:var(--surface);border-radius:4px}.post-card__desc,.post-card__heading{margin-bottom:1.5rem}.post-card__desc{font-size:1.125rem}.post-card__divider{margin:0 10px}.post-item{display:-webkit-box;display:-ms-flexbox;display:flex;padding-bottom:1rem;border-bottom:solid 1px #e0e0e0}.post-item__thumb{-webkit-box-flex:1;-ms-flex:1 0 60%;flex:1 0 60%;width:246px;height:180px;max-width:246px;max-height:180px;-o-object-fit:cover;object-fit:cover;border-radius:6px;margin-right:1.125rem}.post-item__heading{font-size:1.875rem;margin-bottom:1rem}.post-item__desc{font-size:1.25rem;color:var(--light);margin-bottom:1.375rem}.post-item__date{font-size:1.125rem;font-weight:900;color:var(--white);padding:2px 14px;margin-right:1.25rem;border-radius:1.2rem;background-color:#142850}.post-item__date-full{color:var(--dark);font-size:1.25rem}.post-item__divider{margin:0 1.25rem;color:var(--black)}.footer{padding:3.125rem 0}.footer__inner,.footer__social{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.footer__inner{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.footer__social{margin-bottom:1.625rem}.footer__social-icon:not(:last-child){margin-right:2.188rem}.copyright{font-size:.875rem;color:var(--dark);text-align:center}@font-face{font-family:"Heebo";src:url(./../font/Heebo-Black.woff2) format("woff2"),url(./../font/Heebo-Black.woff) format("woff"),url(./../font/Heebo-Black.ttf) format("truetype");font-weight:900;font-style:normal;font-display:swap}@font-face{font-family:"Heebo";src:url(./../font/Heebo-Bold.woff2) format("woff2"),url(./../font/Heebo-Bold.woff) format("woff"),url(./../font/Heebo-Bold.ttf) format("truetype");font-weight:700;font-style:normal;font-display:swap}@font-face{font-family:"Heebo";src:url(./../font/Heebo-Medium.woff2) format("woff2"),url(./../font/Heebo-Medium.woff) format("woff"),url(./../font/Heebo-Medium.ttf) format("truetype");font-weight:500;font-style:normal;font-display:swap}@font-face{font-family:"Heebo";src:url(./../font/Heebo-Regular.woff2) format("woff2"),url(./../font/Heebo-Regular.woff) format("woff"),url(./../font/Heebo-Regular.ttf) format("truetype");font-weight:400;font-style:normal;font-display:swap}body,html{min-height:100%;scroll-behavior:smooth}body.unscroll{overflow-y:hidden}html{font-size:100%}body{color:var(--text);font-weight:400;font-family:var(--font-main)}.page{width:100%;min-height:100vh;margin:0 auto}.container{width:100%;max-width:calc(var(--container-width-m) + var(--container-padding-x)*2);margin-left:auto;margin-right:auto;padding:0 var(--container-padding-x)}.container--l{max-width:calc(var(--container-width-l) + var(--container-padding-x)*2)}.row{display:-webkit-box;display:-ms-flexbox;display:flex}.row--wrap{-ms-flex-wrap:wrap;flex-wrap:wrap}.col--2{-webkit-box-flex:1;-ms-flex:1 1 50%;flex:1 1 50%}.col--2:not(:last-child){margin-right:1.25rem}.col--1{-webkit-box-flex:1;-ms-flex:1 1 100%;flex:1 1 100%;margin-right:0;margin-bottom:2rem}h1,h2,h3,p{font-size:2.75rem;line-height:140%}h2,h3,p{font-size:1.875rem}h3,p{font-size:1.625rem}p{font-size:1rem}.heading{font-weight:700;color:var(--text)}.text{font-size:1rem;line-height:101%}.hero{padding-top:9.063rem;padding-bottom:4.375rem}.hero__content,.hero__inner{display:-webkit-box;display:-ms-flexbox;display:flex}.hero__content{-webkit-box-flex:1;-ms-flex:1 1 40%;flex:1 1 40%;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding-right:14%}.hero__btn{-ms-flex-item-align:start;align-self:flex-start}.hero__heading,.hero__text{margin-bottom:2.5rem}.hero__avatar{border-radius:50%;-webkit-box-flex:1;-ms-flex:1 0 100%;flex:1 0 100%}.posts{padding:2rem 0;background-color:var(--surface-secondary)}.posts__title{margin-bottom:1.25rem}.works{padding-top:2.25rem;padding-bottom:5.188rem}.works__title{margin-bottom:3rem}.blog__heading,.work__heading{margin-bottom:3.125rem}@media screen and (max-width:992px){.container{max-width:750px}}@media screen and (max-width:767px){.header-nav{display:none}.btn-menu{display:block}.title{font-size:1.125rem}.post-card__desc{font-size:1rem}.post-item__heading{font-size:1.625rem}.post-item__divider{margin:0 1rem}.row{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.col--2{-webkit-box-flex:1;-ms-flex:1 1 100%;flex:1 1 100%}.col--2:not(:last-child){margin-right:0;margin-bottom:1.25rem}h1{font-size:2rem}h2,h3{font-size:1.375rem}.hero{padding-top:2rem}.hero__inner{-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.hero__content{margin-top:2rem;text-align:center;padding-right:0}.hero__avatar{max-width:180px}.hero__btn{-ms-flex-item-align:center;align-self:center}}@media screen and (max-width:576px){.post-item{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.post-item__content{margin-left:0}.post-item__thumb{width:100%;height:100%;max-width:340px;max-height:230px;margin-right:0;margin-bottom:1rem}.container{max-width:100%}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */